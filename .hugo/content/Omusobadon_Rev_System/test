+++
title = "オムそば丼予約システム"
outputs = ["Reveal"]
+++

## オムそば丼予約システム基盤

## 中間発表

---

### オムそば丼予約システムとは？

---

{{% section %}}

## 全体設計

<img src="./オムそば丼予約システム.png" />

---

開発環境

1. 予約サイト(フロントエンド)

   - Node.js(v20.11.0 LTS)

2. ダッシュボード(フロントエンド)

   - Node.js

3. 予約システム(バックエンド)

   - Go(v1.21.5)
   - Supabase(データベース)

{{% /section %}}

---

### 似たようなサービスとの違いについて

- ほかにやっている人がいなかった。
- 有料または OSS ではない
- CMS であるということ（WordPress など...）

---

{{% section %}}

## 実装環境について

<img src="./基本設計書.png" />

---

- コントローラーノード：\
  3 ノード\
  （クラスタの管理と制御面、ロードバランサー MetalLB を担当）
- ワーカーノード：\
  3 ノード\
  （実際のアプリケーションワークロード実行）

{{% /section %}}

---

## Kubernetes とは

- Kubernetes は、コンテナオーケストレーションシステムです。
- コンテナのデプロイメント、スケーリング、管理を自動化します。

---

## k0s とは？

- k0s は、Team Lens がコミュニティと協力して作った Kubernetes の軽量ディストリビューションです。
- k3s に続く軽量な Kubernetes 実装であり機能的に柔軟です。
- 必要ない機能を排除し、軽量性を保ちリソースの制約と必要機能を考慮

---
{{% section %}}

## 選定理由

1. Kubernetes が Docker デーモンを  
非推奨にしている。
2. リソース問題

---

- 当初は k8s の使用を考えていました。
- しかし、実装環境でのリソース不足により問題が発生。

クラッシュ、Pod が OOM Killer によりリスタートを繰り返すなど\
最悪の場合サーバー自体が再起動

---

## 結果

<img src="./基本設計書.png" alt="比較１" />
<img src="./基本設計書.png" alt="比較２" />

{{% /section %}}

---

## Podman について

---

## 選定理由

Go_APIServer を Kubernetes に移植する際に  
kube.yaml を一緒に作ってくれる

---

移植する際の kube.yaml

![Alt text](image-3.png)

---

## 使用例

---

コンテナイメージ作る
![Alt text](image-4.png)

---

kube.yaml

![Alt text](image-3.png)

---

Pod 起動

```bash
kubectl apply -f kube.yaml
```

Pod が起動している
![Alt text](image-5.png)

---

次はフロントエンドの石川からの説明です。
